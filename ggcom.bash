#!/usr/bin/env bash
: <<'!COMMENT'

GGCOM - Bash - Utils - GotGet Common Interface v201504162001
Louis T. Getterman IV (@LTGIV)
www.GotGetLLC.com | www.opensour.cc/ggcom/interface

Example usage:
ggcom.bash

!COMMENT

################################################################################
SOURCE="${BASH_SOURCE[0]}" # Dave Dopson, Thank You! - http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  SCRIPTPATH="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$SCRIPTPATH/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
################################################################################
SCRIPTPATH="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
SCRIPTNAME=`basename "$SOURCE"`
LIBPATH="$( cd "$(dirname "${SCRIPTPATH}/../../")" ; pwd -P )/ggcom-bash-library"
################################################################################
source "${LIBPATH}/varsBash.bash"
source "${LIBPATH}/string.bash"
source "${LIBPATH}/version.bash"
################################################################################
source "${LIBPATH}/prompt.bash"
################################################################################

#----- NOTICE: INFO
echo "`getVersion $0 header`"
echo;
#-----/NOTICE: INFO

#----- FYI
echo;
echo "FYI: Right now, the only thing that this utility does is update.";
echo "`pauseret`";
#-----/FYI

#----- CREATE GGCOM UPDATER
TMPUPD=`mktemp /tmp/ggcom.XXXXXXXXX`
chmod 700 $TMPUPD
#-----/CREATE GGCOM UPDATER

#----- CREATE GGCOM MANIFEST
read -r -d '' UPDCMDS <<EOF

echo "Updater generated by: `getVersion $0 program`"
sleep 5

cd "${SCRIPTPATH}/"
echo -n "Updating : "
pwd
git pull

cd "${LIBPATH}/"
echo -n "Updating : "
pwd
git pull

echo

echo "[Removing GGCOM updater]"
rm -rfv "${TMPUPD}"

EOF
#-----/CREATE GGCOM MANIFEST

#----- WRITE GGCOM MANIFEST TO GGCOM UPDATER
echo "$UPDCMDS" > $TMPUPD
#-----/WRITE GGCOM MANIFEST TO GGCOM UPDATER

#----- RUN GGCOM UPDATER
echo "[Running GGCOM updater]"
eval $TMPUPD &
#-----/RUN GGCOM UPDATER
